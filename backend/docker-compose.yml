version: "3.8"

services:
  db:
    image: mysql:8.4.5
    container_name: mysql
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:3306"
    command: --general-log=1 --general-log-file=/etc/mysql/conf.d/general.log
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql_logs:/etc/mysql/conf.d
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    env_file:
      - .env
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: always
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt

  app:
    image: ghcr.io/prgrms-web-devcourse-final-project/pick-go-app:latest
    container_name: pick-go-app
    restart: always
    env_file:
      - .env
    ports:
      - "${SERVER_PORT}:8080"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    env_file:
      - .env
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: ${GF_SIGNUP}
      GF_SECURITY_COOKIE_SAMESITE: ${GF_COOKIE_SAMESITE}
      GF_SECURITY_COOKIE_SECURE: ${GF_COOKIE_SECURE}
      GF_SERVER_DOMAIN: ${GF_DOMAIN}
      GF_SECURITY_ALLOW_EMBEDDING: "true"
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Viewer
    volumes:
      - grafana_data:/var/lib/grafana

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - app
      - node-exporter

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    ports:
      - "9100:9100"

  influxdb: #k6 -> influxdb -> grafana  시각화된 자료를 보기위해서 사용
    image: influxdb:1.8
    container_name: influxdb
    restart: always
    ports:
      - "8086:8086"
    environment:
      INFLUXDB_DB: ${IF_DB_NAME}
      INFLUXDB_HTTP_AUTH_ENABLED: true
      INFLUXDB_ADMIN_USER: ${IF_DB_USER}
      INFLUXDB_ADMIN_PASSWORD: ${IF_DB_PASSWORD}
    volumes:
      - influxdb_data:/var/lib/influxdb

volumes:
  db_data:
  redis_data:
  npm_data:
  npm_letsencrypt:
  grafana_data:
  influxdb_data:

