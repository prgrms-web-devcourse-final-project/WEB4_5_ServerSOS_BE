/* tslint:disable */
/* eslint-disable */
/**
 * PickGO API Document
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime"
import type { RsDataTokenDetailResponse } from "../models/index"
import {
  RsDataTokenDetailResponseFromJSON,
  RsDataTokenDetailResponseToJSON,
} from "../models/index"

export interface RenewTokenRequest {
  refreshToken: string
}

/**
 *
 */
export class TokenAPIApi extends runtime.BaseAPI {
  /**
   * 액세스 토큰 재발급
   */
  async renewTokenRaw(
    requestParameters: RenewTokenRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<RsDataTokenDetailResponse>> {
    if (requestParameters["refreshToken"] == null) {
      throw new runtime.RequiredError(
        "refreshToken",
        'Required parameter "refreshToken" was null or undefined when calling renewToken().',
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    if (this.configuration && this.configuration.accessToken) {
      const token = this.configuration.accessToken
      const tokenString = await token("Authorization", [])

      if (tokenString) {
        headerParameters["Authorization"] = `Bearer ${tokenString}`
      }
    }
    const response = await this.request(
      {
        path: `/api/tokens`,
        method: "POST",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    )

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      RsDataTokenDetailResponseFromJSON(jsonValue),
    )
  }

  /**
   * 액세스 토큰 재발급
   */
  async renewToken(
    requestParameters: RenewTokenRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<RsDataTokenDetailResponse> {
    const response = await this.renewTokenRaw(requestParameters, initOverrides)
    return await response.value()
  }
}
