/* tslint:disable */
/* eslint-disable */
/**
 * PickGO API Document
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ApplicationContextClassLoaderParentUnnamedModuleDescriptor } from './ApplicationContextClassLoaderParentUnnamedModuleDescriptor';
import {
    ApplicationContextClassLoaderParentUnnamedModuleDescriptorFromJSON,
    ApplicationContextClassLoaderParentUnnamedModuleDescriptorFromJSONTyped,
    ApplicationContextClassLoaderParentUnnamedModuleDescriptorToJSON,
    ApplicationContextClassLoaderParentUnnamedModuleDescriptorToJSONTyped,
} from './ApplicationContextClassLoaderParentUnnamedModuleDescriptor';
import type { ApplicationContextClassLoaderParentUnnamedModuleClassLoader } from './ApplicationContextClassLoaderParentUnnamedModuleClassLoader';
import {
    ApplicationContextClassLoaderParentUnnamedModuleClassLoaderFromJSON,
    ApplicationContextClassLoaderParentUnnamedModuleClassLoaderFromJSONTyped,
    ApplicationContextClassLoaderParentUnnamedModuleClassLoaderToJSON,
    ApplicationContextClassLoaderParentUnnamedModuleClassLoaderToJSONTyped,
} from './ApplicationContextClassLoaderParentUnnamedModuleClassLoader';

/**
 * 
 * @export
 * @interface ApplicationContextClassLoaderParentUnnamedModule
 */
export interface ApplicationContextClassLoaderParentUnnamedModule {
    /**
     * 
     * @type {string}
     * @memberof ApplicationContextClassLoaderParentUnnamedModule
     */
    name?: string;
    /**
     * 
     * @type {ApplicationContextClassLoaderParentUnnamedModuleClassLoader}
     * @memberof ApplicationContextClassLoaderParentUnnamedModule
     */
    classLoader?: ApplicationContextClassLoaderParentUnnamedModuleClassLoader;
    /**
     * 
     * @type {ApplicationContextClassLoaderParentUnnamedModuleDescriptor}
     * @memberof ApplicationContextClassLoaderParentUnnamedModule
     */
    descriptor?: ApplicationContextClassLoaderParentUnnamedModuleDescriptor;
    /**
     * 
     * @type {boolean}
     * @memberof ApplicationContextClassLoaderParentUnnamedModule
     */
    named?: boolean;
    /**
     * 
     * @type {Array<object>}
     * @memberof ApplicationContextClassLoaderParentUnnamedModule
     */
    annotations?: Array<object>;
    /**
     * 
     * @type {Array<object>}
     * @memberof ApplicationContextClassLoaderParentUnnamedModule
     */
    declaredAnnotations?: Array<object>;
    /**
     * 
     * @type {Set<string>}
     * @memberof ApplicationContextClassLoaderParentUnnamedModule
     */
    packages?: Set<string>;
    /**
     * 
     * @type {boolean}
     * @memberof ApplicationContextClassLoaderParentUnnamedModule
     */
    nativeAccessEnabled?: boolean;
    /**
     * 
     * @type {object}
     * @memberof ApplicationContextClassLoaderParentUnnamedModule
     */
    layer?: object;
}

/**
 * Check if a given object implements the ApplicationContextClassLoaderParentUnnamedModule interface.
 */
export function instanceOfApplicationContextClassLoaderParentUnnamedModule(value: object): value is ApplicationContextClassLoaderParentUnnamedModule {
    return true;
}

export function ApplicationContextClassLoaderParentUnnamedModuleFromJSON(json: any): ApplicationContextClassLoaderParentUnnamedModule {
    return ApplicationContextClassLoaderParentUnnamedModuleFromJSONTyped(json, false);
}

export function ApplicationContextClassLoaderParentUnnamedModuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplicationContextClassLoaderParentUnnamedModule {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'classLoader': json['classLoader'] == null ? undefined : ApplicationContextClassLoaderParentUnnamedModuleClassLoaderFromJSON(json['classLoader']),
        'descriptor': json['descriptor'] == null ? undefined : ApplicationContextClassLoaderParentUnnamedModuleDescriptorFromJSON(json['descriptor']),
        'named': json['named'] == null ? undefined : json['named'],
        'annotations': json['annotations'] == null ? undefined : json['annotations'],
        'declaredAnnotations': json['declaredAnnotations'] == null ? undefined : json['declaredAnnotations'],
        'packages': json['packages'] == null ? undefined : new Set(json['packages']),
        'nativeAccessEnabled': json['nativeAccessEnabled'] == null ? undefined : json['nativeAccessEnabled'],
        'layer': json['layer'] == null ? undefined : json['layer'],
    };
}

export function ApplicationContextClassLoaderParentUnnamedModuleToJSON(json: any): ApplicationContextClassLoaderParentUnnamedModule {
    return ApplicationContextClassLoaderParentUnnamedModuleToJSONTyped(json, false);
}

export function ApplicationContextClassLoaderParentUnnamedModuleToJSONTyped(value?: ApplicationContextClassLoaderParentUnnamedModule | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'classLoader': ApplicationContextClassLoaderParentUnnamedModuleClassLoaderToJSON(value['classLoader']),
        'descriptor': ApplicationContextClassLoaderParentUnnamedModuleDescriptorToJSON(value['descriptor']),
        'named': value['named'],
        'annotations': value['annotations'],
        'declaredAnnotations': value['declaredAnnotations'],
        'packages': value['packages'] == null ? undefined : Array.from(value['packages'] as Set<any>),
        'nativeAccessEnabled': value['nativeAccessEnabled'],
        'layer': value['layer'],
    };
}

