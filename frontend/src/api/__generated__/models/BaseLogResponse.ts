/* tslint:disable */
/* eslint-disable */
/**
 * PickGO API Document
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BaseLogResponse
 */
export interface BaseLogResponse {
    /**
     * 
     * @type {number}
     * @memberof BaseLogResponse
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof BaseLogResponse
     */
    actorId?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseLogResponse
     */
    actorType?: BaseLogResponseActorTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof BaseLogResponse
     */
    action?: BaseLogResponseActionEnum;
    /**
     * 
     * @type {string}
     * @memberof BaseLogResponse
     */
    requestUri?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseLogResponse
     */
    httpMethod?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseLogResponse
     */
    description?: string;
    /**
     * 
     * @type {Date}
     * @memberof BaseLogResponse
     */
    createdAt?: Date;
}


/**
 * @export
 */
export const BaseLogResponseActorTypeEnum = {
    User: 'USER',
    Admin: 'ADMIN',
    Guest: 'GUEST',
    System: 'SYSTEM'
} as const;
export type BaseLogResponseActorTypeEnum = typeof BaseLogResponseActorTypeEnum[keyof typeof BaseLogResponseActorTypeEnum];

/**
 * @export
 */
export const BaseLogResponseActionEnum = {
    MemberLogin: 'MEMBER_LOGIN',
    MemberLoginKakao: 'MEMBER_LOGIN_KAKAO',
    MemberLogout: 'MEMBER_LOGOUT',
    MemberSignup: 'MEMBER_SIGNUP',
    MemberProfile: 'MEMBER_PROFILE',
    MemberDeleted: 'MEMBER_DELETED',
    ReservationCreated: 'RESERVATION_CREATED',
    ReservationCanceled: 'RESERVATION_CANCELED',
    ReservationDeleted: 'RESERVATION_DELETED',
    ReservationExpired: 'RESERVATION_EXPIRED',
    PaymentCreated: 'PAYMENT_CREATED',
    PaymentCompleted: 'PAYMENT_COMPLETED',
    PaymentExpired: 'PAYMENT_EXPIRED',
    PaymentFailed: 'PAYMENT_FAILED',
    PaymentCanceled: 'PAYMENT_CANCELED',
    PostCreated: 'POST_CREATED',
    PostUpdated: 'POST_UPDATED',
    PostDeleted: 'POST_DELETED',
    PostDetailView: 'POST_DETAIL_VIEW',
    Exception: 'EXCEPTION',
    None: 'NONE'
} as const;
export type BaseLogResponseActionEnum = typeof BaseLogResponseActionEnum[keyof typeof BaseLogResponseActionEnum];


/**
 * Check if a given object implements the BaseLogResponse interface.
 */
export function instanceOfBaseLogResponse(value: object): value is BaseLogResponse {
    return true;
}

export function BaseLogResponseFromJSON(json: any): BaseLogResponse {
    return BaseLogResponseFromJSONTyped(json, false);
}

export function BaseLogResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BaseLogResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'actorId': json['actorId'] == null ? undefined : json['actorId'],
        'actorType': json['actorType'] == null ? undefined : json['actorType'],
        'action': json['action'] == null ? undefined : json['action'],
        'requestUri': json['requestUri'] == null ? undefined : json['requestUri'],
        'httpMethod': json['httpMethod'] == null ? undefined : json['httpMethod'],
        'description': json['description'] == null ? undefined : json['description'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
    };
}

export function BaseLogResponseToJSON(json: any): BaseLogResponse {
    return BaseLogResponseToJSONTyped(json, false);
}

export function BaseLogResponseToJSONTyped(value?: BaseLogResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'actorId': value['actorId'],
        'actorType': value['actorType'],
        'action': value['action'],
        'requestUri': value['requestUri'],
        'httpMethod': value['httpMethod'],
        'description': value['description'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
    };
}

