/* tslint:disable */
/* eslint-disable */
/**
 * PickGO API Document
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime"
/**
 *
 * @export
 * @interface ExampleDetailResponse
 */
export interface ExampleDetailResponse {
  /**
   *
   * @type {string}
   * @memberof ExampleDetailResponse
   */
  title?: string
  /**
   *
   * @type {string}
   * @memberof ExampleDetailResponse
   */
  body?: string
  /**
   *
   * @type {string}
   * @memberof ExampleDetailResponse
   */
  type?: ExampleDetailResponseTypeEnum
}

/**
 * @export
 */
export const ExampleDetailResponseTypeEnum = {
  A: "A",
  B: "B",
} as const
export type ExampleDetailResponseTypeEnum =
  (typeof ExampleDetailResponseTypeEnum)[keyof typeof ExampleDetailResponseTypeEnum]

/**
 * Check if a given object implements the ExampleDetailResponse interface.
 */
export function instanceOfExampleDetailResponse(
  value: object,
): value is ExampleDetailResponse {
  return true
}

export function ExampleDetailResponseFromJSON(
  json: any,
): ExampleDetailResponse {
  return ExampleDetailResponseFromJSONTyped(json, false)
}

export function ExampleDetailResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ExampleDetailResponse {
  if (json == null) {
    return json
  }
  return {
    title: json["title"] == null ? undefined : json["title"],
    body: json["body"] == null ? undefined : json["body"],
    type: json["type"] == null ? undefined : json["type"],
  }
}

export function ExampleDetailResponseToJSON(json: any): ExampleDetailResponse {
  return ExampleDetailResponseToJSONTyped(json, false)
}

export function ExampleDetailResponseToJSONTyped(
  value?: ExampleDetailResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    title: value["title"],
    body: value["body"],
    type: value["type"],
  }
}
