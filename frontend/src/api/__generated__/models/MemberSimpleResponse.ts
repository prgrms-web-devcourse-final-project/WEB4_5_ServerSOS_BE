/* tslint:disable */
/* eslint-disable */
/**
 * PickGO API Document
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime"
/**
 *
 * @export
 * @interface MemberSimpleResponse
 */
export interface MemberSimpleResponse {
  /**
   *
   * @type {string}
   * @memberof MemberSimpleResponse
   */
  id?: string
  /**
   *
   * @type {string}
   * @memberof MemberSimpleResponse
   */
  email?: string
  /**
   *
   * @type {string}
   * @memberof MemberSimpleResponse
   */
  nickname?: string
  /**
   *
   * @type {string}
   * @memberof MemberSimpleResponse
   */
  authority?: MemberSimpleResponseAuthorityEnum
  /**
   *
   * @type {string}
   * @memberof MemberSimpleResponse
   */
  createdAt?: string
}

/**
 * @export
 */
export const MemberSimpleResponseAuthorityEnum = {
  RoleAdmin: "ROLE_ADMIN",
  RoleUser: "ROLE_USER",
} as const
export type MemberSimpleResponseAuthorityEnum =
  (typeof MemberSimpleResponseAuthorityEnum)[keyof typeof MemberSimpleResponseAuthorityEnum]

/**
 * Check if a given object implements the MemberSimpleResponse interface.
 */
export function instanceOfMemberSimpleResponse(
  value: object,
): value is MemberSimpleResponse {
  return true
}

export function MemberSimpleResponseFromJSON(json: any): MemberSimpleResponse {
  return MemberSimpleResponseFromJSONTyped(json, false)
}

export function MemberSimpleResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): MemberSimpleResponse {
  if (json == null) {
    return json
  }
  return {
    id: json["id"] == null ? undefined : json["id"],
    email: json["email"] == null ? undefined : json["email"],
    nickname: json["nickname"] == null ? undefined : json["nickname"],
    authority: json["authority"] == null ? undefined : json["authority"],
    createdAt: json["createdAt"] == null ? undefined : json["createdAt"],
  }
}

export function MemberSimpleResponseToJSON(json: any): MemberSimpleResponse {
  return MemberSimpleResponseToJSONTyped(json, false)
}

export function MemberSimpleResponseToJSONTyped(
  value?: MemberSimpleResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    id: value["id"],
    email: value["email"],
    nickname: value["nickname"],
    authority: value["authority"],
    createdAt: value["createdAt"],
  }
}
