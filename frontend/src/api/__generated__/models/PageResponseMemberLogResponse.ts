/* tslint:disable */
/* eslint-disable */
/**
 * PickGO API Document
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime"
import type { MemberLogResponse } from "./MemberLogResponse"
import {
  MemberLogResponseFromJSON,
  MemberLogResponseFromJSONTyped,
  MemberLogResponseToJSON,
  MemberLogResponseToJSONTyped,
} from "./MemberLogResponse"

/**
 *
 * @export
 * @interface PageResponseMemberLogResponse
 */
export interface PageResponseMemberLogResponse {
  /**
   *
   * @type {Array<MemberLogResponse>}
   * @memberof PageResponseMemberLogResponse
   */
  items?: Array<MemberLogResponse>
  /**
   *
   * @type {number}
   * @memberof PageResponseMemberLogResponse
   */
  page?: number
  /**
   *
   * @type {number}
   * @memberof PageResponseMemberLogResponse
   */
  size?: number
  /**
   *
   * @type {number}
   * @memberof PageResponseMemberLogResponse
   */
  totalPages?: number
  /**
   *
   * @type {number}
   * @memberof PageResponseMemberLogResponse
   */
  totalElements?: number
}

/**
 * Check if a given object implements the PageResponseMemberLogResponse interface.
 */
export function instanceOfPageResponseMemberLogResponse(
  value: object,
): value is PageResponseMemberLogResponse {
  return true
}

export function PageResponseMemberLogResponseFromJSON(
  json: any,
): PageResponseMemberLogResponse {
  return PageResponseMemberLogResponseFromJSONTyped(json, false)
}

export function PageResponseMemberLogResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PageResponseMemberLogResponse {
  if (json == null) {
    return json
  }
  return {
    items:
      json["items"] == null
        ? undefined
        : (json["items"] as Array<any>).map(MemberLogResponseFromJSON),
    page: json["page"] == null ? undefined : json["page"],
    size: json["size"] == null ? undefined : json["size"],
    totalPages: json["totalPages"] == null ? undefined : json["totalPages"],
    totalElements:
      json["totalElements"] == null ? undefined : json["totalElements"],
  }
}

export function PageResponseMemberLogResponseToJSON(
  json: any,
): PageResponseMemberLogResponse {
  return PageResponseMemberLogResponseToJSONTyped(json, false)
}

export function PageResponseMemberLogResponseToJSONTyped(
  value?: PageResponseMemberLogResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    items:
      value["items"] == null
        ? undefined
        : (value["items"] as Array<any>).map(MemberLogResponseToJSON),
    page: value["page"],
    size: value["size"],
    totalPages: value["totalPages"],
    totalElements: value["totalElements"],
  }
}
