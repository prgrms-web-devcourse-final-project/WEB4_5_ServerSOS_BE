/* tslint:disable */
/* eslint-disable */
/**
 * PickGO API Document
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime"
/**
 *
 * @export
 * @interface PaymentSimpleResponse
 */
export interface PaymentSimpleResponse {
  /**
   *
   * @type {number}
   * @memberof PaymentSimpleResponse
   */
  id?: number
  /**
   *
   * @type {number}
   * @memberof PaymentSimpleResponse
   */
  amount?: number
  /**
   *
   * @type {string}
   * @memberof PaymentSimpleResponse
   */
  performanceName?: string
  /**
   *
   * @type {string}
   * @memberof PaymentSimpleResponse
   */
  paymentStatus?: PaymentSimpleResponsePaymentStatusEnum
}

/**
 * @export
 */
export const PaymentSimpleResponsePaymentStatusEnum = {
  Pending: "PENDING",
  Completed: "COMPLETED",
  Failed: "FAILED",
  Canceled: "CANCELED",
  Expired: "EXPIRED",
} as const
export type PaymentSimpleResponsePaymentStatusEnum =
  (typeof PaymentSimpleResponsePaymentStatusEnum)[keyof typeof PaymentSimpleResponsePaymentStatusEnum]

/**
 * Check if a given object implements the PaymentSimpleResponse interface.
 */
export function instanceOfPaymentSimpleResponse(
  value: object,
): value is PaymentSimpleResponse {
  return true
}

export function PaymentSimpleResponseFromJSON(
  json: any,
): PaymentSimpleResponse {
  return PaymentSimpleResponseFromJSONTyped(json, false)
}

export function PaymentSimpleResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PaymentSimpleResponse {
  if (json == null) {
    return json
  }
  return {
    id: json["id"] == null ? undefined : json["id"],
    amount: json["amount"] == null ? undefined : json["amount"],
    performanceName:
      json["performanceName"] == null ? undefined : json["performanceName"],
    paymentStatus:
      json["paymentStatus"] == null ? undefined : json["paymentStatus"],
  }
}

export function PaymentSimpleResponseToJSON(json: any): PaymentSimpleResponse {
  return PaymentSimpleResponseToJSONTyped(json, false)
}

export function PaymentSimpleResponseToJSONTyped(
  value?: PaymentSimpleResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    id: value["id"],
    amount: value["amount"],
    performanceName: value["performanceName"],
    paymentStatus: value["paymentStatus"],
  }
}
