/* tslint:disable */
/* eslint-disable */
/**
 * PickGO API Document
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime"
/**
 *
 * @export
 * @interface PostSimpleResponse
 */
export interface PostSimpleResponse {
  /**
   *
   * @type {number}
   * @memberof PostSimpleResponse
   */
  id?: number
  /**
   *
   * @type {string}
   * @memberof PostSimpleResponse
   */
  title?: string
  /**
   *
   * @type {number}
   * @memberof PostSimpleResponse
   */
  views?: number
  /**
   *
   * @type {Date}
   * @memberof PostSimpleResponse
   */
  startDate?: Date
  /**
   *
   * @type {Date}
   * @memberof PostSimpleResponse
   */
  endDate?: Date
  /**
   *
   * @type {string}
   * @memberof PostSimpleResponse
   */
  poster?: string
  /**
   *
   * @type {string}
   * @memberof PostSimpleResponse
   */
  venue?: string
}

/**
 * Check if a given object implements the PostSimpleResponse interface.
 */
export function instanceOfPostSimpleResponse(
  value: object,
): value is PostSimpleResponse {
  return true
}

export function PostSimpleResponseFromJSON(json: any): PostSimpleResponse {
  return PostSimpleResponseFromJSONTyped(json, false)
}

export function PostSimpleResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PostSimpleResponse {
  if (json == null) {
    return json
  }
  return {
    id: json["id"] == null ? undefined : json["id"],
    title: json["title"] == null ? undefined : json["title"],
    views: json["views"] == null ? undefined : json["views"],
    startDate:
      json["startDate"] == null ? undefined : new Date(json["startDate"]),
    endDate: json["endDate"] == null ? undefined : new Date(json["endDate"]),
    poster: json["poster"] == null ? undefined : json["poster"],
    venue: json["venue"] == null ? undefined : json["venue"],
  }
}

export function PostSimpleResponseToJSON(json: any): PostSimpleResponse {
  return PostSimpleResponseToJSONTyped(json, false)
}

export function PostSimpleResponseToJSONTyped(
  value?: PostSimpleResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    id: value["id"],
    title: value["title"],
    views: value["views"],
    startDate:
      value["startDate"] == null
        ? undefined
        : value["startDate"].toISOString().substring(0, 10),
    endDate:
      value["endDate"] == null
        ? undefined
        : value["endDate"].toISOString().substring(0, 10),
    poster: value["poster"],
    venue: value["venue"],
  }
}
