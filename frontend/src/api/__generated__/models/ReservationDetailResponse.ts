/* tslint:disable */
/* eslint-disable */
/**
 * PickGO API Document
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VenueInfo } from './VenueInfo';
import {
    VenueInfoFromJSON,
    VenueInfoFromJSONTyped,
    VenueInfoToJSON,
    VenueInfoToJSONTyped,
} from './VenueInfo';
import type { PerformanceInfo } from './PerformanceInfo';
import {
    PerformanceInfoFromJSON,
    PerformanceInfoFromJSONTyped,
    PerformanceInfoToJSON,
    PerformanceInfoToJSONTyped,
} from './PerformanceInfo';
import type { PerformanceSessionInfo } from './PerformanceSessionInfo';
import {
    PerformanceSessionInfoFromJSON,
    PerformanceSessionInfoFromJSONTyped,
    PerformanceSessionInfoToJSON,
    PerformanceSessionInfoToJSONTyped,
} from './PerformanceSessionInfo';
import type { SeatSimpleResponse } from './SeatSimpleResponse';
import {
    SeatSimpleResponseFromJSON,
    SeatSimpleResponseFromJSONTyped,
    SeatSimpleResponseToJSON,
    SeatSimpleResponseToJSONTyped,
} from './SeatSimpleResponse';

/**
 * 
 * @export
 * @interface ReservationDetailResponse
 */
export interface ReservationDetailResponse {
    /**
     * 
     * @type {number}
     * @memberof ReservationDetailResponse
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ReservationDetailResponse
     */
    memberId?: string;
    /**
     * 
     * @type {number}
     * @memberof ReservationDetailResponse
     */
    totalPrice?: number;
    /**
     * 
     * @type {string}
     * @memberof ReservationDetailResponse
     */
    status?: ReservationDetailResponseStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof ReservationDetailResponse
     */
    reservationTime?: Date;
    /**
     * 
     * @type {PerformanceInfo}
     * @memberof ReservationDetailResponse
     */
    performance?: PerformanceInfo;
    /**
     * 
     * @type {PerformanceSessionInfo}
     * @memberof ReservationDetailResponse
     */
    session?: PerformanceSessionInfo;
    /**
     * 
     * @type {VenueInfo}
     * @memberof ReservationDetailResponse
     */
    venue?: VenueInfo;
    /**
     * 
     * @type {Array<SeatSimpleResponse>}
     * @memberof ReservationDetailResponse
     */
    seats?: Array<SeatSimpleResponse>;
}


/**
 * @export
 */
export const ReservationDetailResponseStatusEnum = {
    Reserved: 'RESERVED',
    Canceled: 'CANCELED',
    Paid: 'PAID',
    Expired: 'EXPIRED'
} as const;
export type ReservationDetailResponseStatusEnum = typeof ReservationDetailResponseStatusEnum[keyof typeof ReservationDetailResponseStatusEnum];


/**
 * Check if a given object implements the ReservationDetailResponse interface.
 */
export function instanceOfReservationDetailResponse(value: object): value is ReservationDetailResponse {
    return true;
}

export function ReservationDetailResponseFromJSON(json: any): ReservationDetailResponse {
    return ReservationDetailResponseFromJSONTyped(json, false);
}

export function ReservationDetailResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReservationDetailResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'memberId': json['memberId'] == null ? undefined : json['memberId'],
        'totalPrice': json['total_price'] == null ? undefined : json['total_price'],
        'status': json['status'] == null ? undefined : json['status'],
        'reservationTime': json['reservation_time'] == null ? undefined : (new Date(json['reservation_time'])),
        'performance': json['performance'] == null ? undefined : PerformanceInfoFromJSON(json['performance']),
        'session': json['session'] == null ? undefined : PerformanceSessionInfoFromJSON(json['session']),
        'venue': json['venue'] == null ? undefined : VenueInfoFromJSON(json['venue']),
        'seats': json['seats'] == null ? undefined : ((json['seats'] as Array<any>).map(SeatSimpleResponseFromJSON)),
    };
}

export function ReservationDetailResponseToJSON(json: any): ReservationDetailResponse {
    return ReservationDetailResponseToJSONTyped(json, false);
}

export function ReservationDetailResponseToJSONTyped(value?: ReservationDetailResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'memberId': value['memberId'],
        'total_price': value['totalPrice'],
        'status': value['status'],
        'reservation_time': value['reservationTime'] == null ? undefined : ((value['reservationTime']).toISOString()),
        'performance': PerformanceInfoToJSON(value['performance']),
        'session': PerformanceSessionInfoToJSON(value['session']),
        'venue': VenueInfoToJSON(value['venue']),
        'seats': value['seats'] == null ? undefined : ((value['seats'] as Array<any>).map(SeatSimpleResponseToJSON)),
    };
}

